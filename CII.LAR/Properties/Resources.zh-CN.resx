<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelItem1Str" xml:space="preserve">
    <value>准备就绪</value>
  </data>
  <data name="labelItemLanguageStr" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="StrCreateReport" xml:space="preserve">
    <value>点击报告按钮创建技术支持请求。</value>
  </data>
  <data name="StrOK" xml:space="preserve">
    <value>确认</value>
  </data>
  <data name="StrOutOfMemory" xml:space="preserve">
    <value>程序内存不足，请重启程序。</value>
  </data>
  <data name="StrReport" xml:space="preserve">
    <value>报告</value>
  </data>
  <data name="StrUnknownErrorMsg" xml:space="preserve">
    <value>遇到未知错误，请重启程序。</value>
  </data>
  <data name="StrSetting" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="StrStatisticsTitle" xml:space="preserve">
    <value>统计信息</value>
  </data>
  <data name="StrRulerAppearanceTitle" xml:space="preserve">
    <value>测量工具属性</value>
  </data>
  <data name="StrScaleAppearanceTitle" xml:space="preserve">
    <value>坐标尺属性</value>
  </data>
  <data name="StrLaserCtrlTitle" xml:space="preserve">
    <value>激光控制</value>
  </data>
  <data name="StrLaserAppearanceTitle" xml:space="preserve">
    <value>激光光标属性</value>
  </data>
  <data name="StrLaserAlignmentTitle" xml:space="preserve">
    <value>激光目标对齐</value>
  </data>
  <data name="StrLaserHoleSizeCalibration" xml:space="preserve">
    <value>激光孔径标定</value>
  </data>
  <data name="StrShortcutTitle" xml:space="preserve">
    <value>键盘/脚踏快捷键设置</value>
  </data>
  <data name="StrObjectLense" xml:space="preserve">
    <value>物镜管理</value>
  </data>
  <data name="StrDeleteFile" xml:space="preserve">
    <value>确定删除这个文件吗？</value>
  </data>
  <data name="StrCloseSimulator" xml:space="preserve">
    <value>关闭模拟模式</value>
  </data>
  <data name="StrOpenSimulator" xml:space="preserve">
    <value>开启模拟模式</value>
  </data>
  <data name="StrLenseFactorInputError" xml:space="preserve">
    <value>物镜倍数为数字，或者输入的物镜倍数超限，请正确输入数字。</value>
  </data>
  <data name="StrShortcutExist" xml:space="preserve">
    <value>这个快捷键已经存在</value>
  </data>
  <data name="StrVideoChooseTitle" xml:space="preserve">
    <value>相机选择</value>
  </data>
  <data name="StrVideoAvailable" xml:space="preserve">
    <value>可用相机</value>
  </data>
  <data name="StrVideoNoAvailable" xml:space="preserve">
    <value>没有可用相机</value>
  </data>
  <data name="StrScreenshotSuccess" xml:space="preserve">
    <value>拍照成功</value>
  </data>
  <data name="StrCalibrationSuccess" xml:space="preserve">
    <value>校准保存成功</value>
  </data>
  <data name="StrZoomRate" xml:space="preserve">
    <value>放大倍数: </value>
  </data>
  <data name="StrAboutCtrlTitle" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="StrWarning" xml:space="preserve">
    <value>提示</value>
  </data>
  <data name="StrProgramExit" xml:space="preserve">
    <value>程序已经在运行！</value>
  </data>
  <data name="StrHideRuler" xml:space="preserve">
    <value>隐藏刻度尺</value>
  </data>
  <data name="StrSingleHole" xml:space="preserve">
    <value>单孔模式</value>
  </data>
  <data name="StrMultiHole" xml:space="preserve">
    <value>多孔模式</value>
  </data>
  <data name="StrSystemInfoTitle" xml:space="preserve">
    <value>系统信息</value>
  </data>
  <data name="StrDisconnect" xml:space="preserve">
    <value>断开</value>
  </data>
  <data name="StrConnected" xml:space="preserve">
    <value>已连接</value>
  </data>
  <data name="StrOK" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="StrYes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="StrNo" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="StrAbort" xml:space="preserve">
    <value>中止</value>
  </data>
  <data name="StrRetry" xml:space="preserve">
    <value>重试</value>
  </data>
  <data name="StrCancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="StrIgnore" xml:space="preserve">
    <value>忽略</value>
  </data>
  <data name="StrExit" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="StrWaring" xml:space="preserve">
    <value>警告</value>
  </data>
  <data name="StrCannotPrint" xml:space="preserve">
    <value>无法打印视频文件！</value>
  </data>
  <data name="StrCannotPrintEmpty" xml:space="preserve">
    <value>请选择需要打印的图片。</value>
  </data>
  <data name="StrExitMsg" xml:space="preserve">
    <value>你确定退出当前程序吗？</value>
  </data>
  <data name="StrMainTitle" xml:space="preserve">
    <value>辅助生殖激光光学系统软件</value>
  </data>
  <data name="StrExitExceptionMsg" xml:space="preserve">
    <value>软件正在校准，若强制退出，请先关闭校准窗口。</value>
  </data>
  <data name="StrEnableRedLaser" xml:space="preserve">
    <value>开启红光</value>
  </data>
  <data name="StrCloseRedLaser" xml:space="preserve">
    <value>关闭红光</value>
  </data>
  <data name="StrLaserNotConnect" xml:space="preserve">
    <value>请等待激光串口初始化完成后，再开始校准。</value>
  </data>
  <data name="StrLaserNotReady" xml:space="preserve">
    <value>请等待激光串口初始化完成后，才可以打开红光。</value>
  </data>
  <data name="StrmodifierWarning" xml:space="preserve">
    <value>必须指定一个控制键，例如 Control, Alt 或 Shift键。</value>
  </data>
  <data name="StrEnterHotKey" xml:space="preserve">
    <value>在这里输入快捷键</value>
  </data>
  <data name="StrConfirmToDelete" xml:space="preserve">
    <value>确定删除这个文件吗?</value>
  </data>
  <data name="StrCannotEnableRedLaser" xml:space="preserve">
    <value>活检模式下激光正在射击，红光暂时无法开启。</value>
  </data>
</root>